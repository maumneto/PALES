#include "contiki.h"
#include "net/rime.h"
#include <stdio.h>
#include "fuzzy.h"

#define MAX_MEMBROS 3
//-----------------------variaveis------------------------//
static int round_atual = -1; //round atual do cluster//
static uint8_t membros[MAX_MEMBROS]; // membros dos clusters
static uint16_t canal; //canal que o CH usa para se comunicar com seus membros
//---------------------------------------------------------//

//-----------------------funcoes------------------------//
void inicializa(); // funcao de inicializacao que configura parametros de cada CH (para nao ter que criar codigos separados para cada CH)
//---------------------------------------------------------//
//**broadcast**//
static const struct broadcast_callbacks broadcast_call = { broadcast_recv };
static struct broadcast_conn broadcast;
static struct broadcast_conn broadcast_local;

static void broadcast_recv(struct broadcast_conn *c, const rimeaddr_t *from)
{
	/*
	 * Um CH somente recebe mensagens via broadcast do sink.
	 * Quando isso acontece, Ã© iniciado um novo round.
	 */
	//envia uma msg solicitando a coleta inicial saudavel//
	packetbuf_copyfrom(&round_atual, sizeof(int));
	broadcast_send(&broadcast_local);

}


PROCESS(sink_process, "Processo do CH");
AUTOSTART_PROCESSES(&sink_process);
PROCESS_THREAD(sink_process, ev, data)
{
	PROCESS_EXITHANDLER(broadcast_close(&broadcast));
	PROCESS_BEGIN()
	inicializa();
	broadcast_open(&broadcast, 129, &broadcast_call);//canal do sink
	broadcast_open(&broadcast_local, canal, NULL); //canal local
	/*Fuzzy f = novo_fuzzy();
	fuzzificar(f,0.55,1.2);
	inferencia_local(f);
	imprimir(f);*/
	PROCESS_END();
}

void inicializa()
{
	uint8_t i;
	if(rimeaddr_node_addr.u8[0] == 2)
	{
		canal = 130;
		membros[0] = 6;membros[1] = 7;membros[2] = 8;
	}
	else
	{
		if(rimeaddr_node_addr.u8[0] == 2)
		{
			canal = 131;
			membros[0] = 9;membros[1] = 10;membros[2] = 11;
		}
		else
		{
			if(rimeaddr_node_addr.u8[0] == 2)
			{
				canal = 132;
				membros[0] = 12;membros[1] = 13;membros[2] = 14;
			}
			else
			{
				canal = 133;
				membros[0] = 15;membros[1] = 16;membros[2] = 17;
			}
		}
	}

}
 
